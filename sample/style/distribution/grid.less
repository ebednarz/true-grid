.grid(
    @min-width;
    @max-width: none;
    @columns: 12;
    @gutter: 1.5em;
    @context-selector: ~'.grid-context';
    @column-selector: ~'> *';
    @parent-selector: none;
    @layout
    ) {
    @min-width-query: ~'only screen and (min-width: @{min-width})';
    .query(@_) {
        @layout-query: ~'only screen and (min-width: @{min-width}) and (max-width: @{max-width})';
    }
    .query(none) {
        @layout-query: @min-width-query;
    }
    .query(@max-width);

    //noinspection LessUnresolvedVariable
    @media @layout-query {
        @column-width: round(100 / @columns, 2);
        @horizontal-offset: round((@gutter / 2), 2);

        .column(@from, @to: @from) {
            @range: ((@to - @from) + 1);
            @width: (@range * @column-width);
            @margin-left: ((@from - 1) * @column-width);
            width: ~'@{width}%';
            margin-left: ~'@{margin-left}%';
            padding: 0 @horizontal-offset;
        }

        @{context-selector} {
            margin: 0 -@horizontal-offset;

            @{column-selector} {
                float: left;
                margin-right: -100%;
                -moz-box-sizing: border-box;
                box-sizing: border-box;
            }
        }

        .parent() when not (@parent-selector = none) {
            @{parent-selector} {
                max-width: none;
            }
        }

        .parent();
        @layout();
    }
}
